>>> add_integer = __import__('0-add_integer').add_integer

#Cases add_integer

>>> add_integer(1, 2)
3

>>> add_integer(100, -2)
98

>>> add_integer(2)
100

>>> add_integer(100.3, -2)
98

>>> add_integer(1, -2)
-1

>>> add_integer(-100.748937, 2)
-98

>>> add_integer(-40)
58

#Edge Cases

>>> add_integer(4, "School")
Traceback (most recent call last):
TypeError: b must be an integer

>>> add_integer("School", 4)
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer("ALX")
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer(None)
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer()
Traceback (most recent call last):
TypeError: add_integer() missing 1 required positional argument: 'a'

>>> add_integer(float("-inf"))
Traceback (most recent call last):
OverflowError: cannot convert float infinity to integer

>>> add_integer(float("inf"))
Traceback (most recent call last):
OverflowError: cannot convert float infinity to integer

>>> add_integer(1e300**2, 1e300000)
Traceback (most recent call last):
OverflowError: (34, 'Numerical result out of range')

>>> add_integer(float('nan'))
Traceback (most recent call last):
ValueError: cannot convert float NaN to integer